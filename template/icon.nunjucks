/* eslint-disable */
// {{comment}}
{% if reactPureRender %}
import Component from 'react-pure-render/component';
import React from 'react';
{%- else %}
import React, {Component} from 'react';
{%- endif %}

const iconList = [
  {%- for icon in icons %}
  '{{icon.name}}',
  {%- endfor %}
]

export default class Icon extends Component {

  static propTypes = {
    color: React.PropTypes.string,
    height: React.PropTypes.number,
    kind: React.PropTypes.oneOf(iconList).isRequired,
    preview: React.PropTypes.bool,
    onClick: React.PropTypes.func,
    size: React.PropTypes.number,
    width: React.PropTypes.number,
  };

  static defaultProps = {
    size: 32,
    color: '#000'
  }

  render() {
    const {kind, preview, onClick} = this.props

    return (
      <div onClick={onClick}>
        {preview ? this.renderPreview() : this.renderIcon(kind)}
      </div>
    );
  }

  renderPreview() {
    return (
      <div>
        {iconList.map(kind => this.renderPreviewKind(kind))}
      </div>
    )
  }

  renderPreviewKind(kind) {
    return (
      <span key={kind}>
        <h3>&lt;Icon kind="{kind}" /&gt;</h3>
        {this.renderIcon(kind)}
      </span>
    )
  }

  renderIcon(kind) {
    const {color, size, height, width} = this.props;

    switch (kind) {
      default: return null;
      {% for icon in icons -%}
        case ('{{icon.name}}'): return ({{icon.svg | safe}});
      {% endfor -%}
    }
  }
}
